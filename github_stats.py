import requests
import pandas as pd
import streamlit as st

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
ORG_NAME = "NeuroFlexDev"
GITHUB_API_URL = f"https://api.github.com/orgs/{ORG_NAME}/repos"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è–º
def fetch_github_repos():
    response = requests.get(GITHUB_API_URL)
    if response.status_code == 200:
        return response.json()
    else:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {response.status_code}")
        return []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è–º
def analyze_github_stats(repos):
    data = []
    for repo in repos:
        data.append({
            "–ù–∞–∑–≤–∞–Ω–∏–µ": repo["name"],
            "–ó–≤–µ–∑–¥—ã": repo["stargazers_count"],
            "–§–æ—Ä–∫–∏": repo["forks_count"],
            "–û—Ç–∫—Ä—ã—Ç—ã–µ Issues": repo["open_issues_count"],
            "–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ": repo["updated_at"]
        })
    return pd.DataFrame(data)

# Streamlit UI
st.title("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ NeuroFlexDev")
repos = fetch_github_repos()
if repos:
    df = analyze_github_stats(repos)
    st.dataframe(df)
    
    # –ì—Ä–∞—Ñ–∏–∫ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –ø–æ –∑–≤–µ–∑–¥–∞–º
    st.subheader("‚≠ê –ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å –ø–æ –∑–≤–µ–∑–¥–∞–º")
    st.bar_chart(df.set_index("–ù–∞–∑–≤–∞–Ω–∏–µ")["–ó–≤–µ–∑–¥—ã"])
    
    # –ì—Ä–∞—Ñ–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ Issues
    st.subheader("üêõ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫—Ä—ã—Ç—ã—Ö Issues")
    st.bar_chart(df.set_index("–ù–∞–∑–≤–∞–Ω–∏–µ")["–û—Ç–∫—Ä—ã—Ç—ã–µ Issues"])

import logging
from telegram import Update
from telegram.ext import ContextTypes

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö GitHub –∏ —Ç—Ä–µ–Ω–¥–æ–≤
from bot.abeona_log import (
    fetch_github_repos,
    analyze_github_stats,
    generate_github_bar_chart,
    load_chat_activity,
    analyze_trends,
    generate_neuroflex_wordcloud
)

logger = logging.getLogger(__name__)

async def github_stats_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /github_stats –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ GitHub,
    –≤–∫–ª—é—á–∞—è —Ç–∞–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏, –∫–∞–∫ –∑–≤–µ–∑–¥—ã, —Ñ–æ—Ä–∫–∏, –æ—Ç–∫—Ä—ã—Ç—ã–µ Issues –∏ –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ "NeuroFlexDev"
        repos = fetch_github_repos("NeuroFlexDev")
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è DataFrame —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        df = analyze_github_stats(repos)
        
        # –û—Ç–ª–∞–¥–∫–∞: –≤—ã–≤–æ–¥ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
        logger.info(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã: {df.columns}")
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∏–º–µ–Ω–∞ —Å—Ç–æ–ª–±—Ü–æ–≤
        stars_chart = generate_github_bar_chart(df, "–ó–≤–µ–∑–¥—ã", "–ó–≤–µ–∑–¥—ã")
        forks_chart = generate_github_bar_chart(df, "–§–æ—Ä–∫–∏", "–§–æ—Ä–∫–∏")
        issues_chart = generate_github_bar_chart(df, "–û—Ç–∫—Ä—ã—Ç—ã–µ Issues", "–û—Ç–∫—Ä—ã—Ç—ã–µ Issues")
        
        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–π —Å–≤–æ–¥–∫–∏ –ø–æ –∫–∞–∂–¥–æ–º—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é
        summary_lines = []
        for _, row in df.iterrows():
            line = (
                f"üì¶ {row['–ù–∞–∑–≤–∞–Ω–∏–µ']}\n"
                f"‚≠ê –ó–≤–µ–∑–¥—ã: {row['–ó–≤–µ–∑–¥—ã']} | üç¥ –§–æ—Ä–∫–∏: {row['–§–æ—Ä–∫–∏']} | ‚ùó –û—Ç–∫—Ä—ã—Ç—ã–µ Issues: {row['–û—Ç–∫—Ä—ã—Ç—ã–µ Issues']}\n"
                f"üîÑ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {row['–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ']}\n"
            )
            summary_lines.append(line)
        summary_text = "\n".join(summary_lines)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é —Å–≤–æ–¥–∫—É
        await update.message.reply_text(f"–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ GitHub:\n\n{summary_text}")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫–∏ –ø–æ –º–µ—Ç—Ä–∏–∫–∞–º
        await update.message.reply_photo(photo=stars_chart, caption="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –ó–≤–µ–∑–¥—ã")
        await update.message.reply_photo(photo=forks_chart, caption="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –§–æ—Ä–∫–∏")
        await update.message.reply_photo(photo=issues_chart, caption="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –û—Ç–∫—Ä—ã—Ç—ã–µ Issues")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ GitHub: {e}")
        await update.message.reply_text(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ GitHub: {e}")

async def trends_wordcloud_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /trends_wordcloud –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±–ª–∞–∫–æ —Å–ª–æ–≤ —Å —Ç—Ä–µ–Ω–¥–∞–º–∏ –æ–±—Å—É–∂–¥–µ–Ω–∏–π.
    """
    try:
        df = load_chat_activity("chat_activity.csv")
        trends = analyze_trends(df)
        if not trends:
            await update.message.reply_text("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–µ–Ω–¥–æ–≤.")
            return
        buf = generate_neuroflex_wordcloud(trends, "neuroflex_mask.png")
        await update.message.reply_photo(photo=buf, caption="–û–±–ª–∞–∫–æ —Å–ª–æ–≤ (—Ç—Ä–µ–Ω–¥—ã –≤ —á–∞—Ç–∞—Ö)")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ wordcloud: {e}")
        await update.message.reply_text(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ wordcloud: {e}")
